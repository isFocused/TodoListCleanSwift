//
//  AuthViewController.swift
//  TodoListCleanSwift
//
//  Created by Denis Ivanov on 23.02.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthDisplayLogic: AnyObject {
	func displaySomething(viewModel: Auth.Something.ViewModel)
}

class AuthViewController: UIViewController, AuthDisplayLogic {
	var interactor: AuthBusinessLogic?
	var router: (NSObjectProtocol & AuthRoutingLogic & AuthDataPassing)?
	
	@IBOutlet private var loadingView: UIView!
	@IBOutlet private var passwordTextField: UITextField!
	@IBOutlet private var loginTextField: UITextField!
	@IBOutlet private var loginButton: UIButton!
	
	// MARK: - Object lifecycle
	
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}
	
	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		setup()
	}
	
	// MARK: - Setup
	
	private func setup() {
		let viewController = self
		let interactor = AuthInteractor()
		let presenter = AuthPresenter()
		let router = AuthRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}
	
	// MARK: - Routing
	
	override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
		if let scene = segue.identifier {
			let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
			if let router = router, router.responds(to: selector) {
				router.perform(selector, with: segue)
			}
		}
	}
	
	override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
		super.touchesBegan(touches, with: event)
		view.endEditing(true)
	}
	
	func displaySomething(viewModel: Auth.Something.ViewModel) {
		switch viewModel {
		case .alert(let title, let message):
			let allertController = UIAlertController(title: title, message: message, preferredStyle: .alert)
			allertController.addAction(UIAlertAction(title: "OK", style: .cancel))
			present(allertController, animated: true)
		case .transition:
			performSegue(withIdentifier: "Detail", sender: nil)
			return
		}
		loadingView.isHidden.toggle()
	}
	
	@IBAction private func comeIn() {
		loadingView.isHidden.toggle()
		interactor?.doSomething(request: .auth(login: "Admin", password: "pa$$32!"))
	}
}

extension AuthViewController: UITextFieldDelegate {
	func textFieldShouldReturn(_ textField: UITextField) -> Bool {
		switch textField {
		case loginTextField:
			textField.resignFirstResponder()
			passwordTextField.becomeFirstResponder()
		case passwordTextField:
			textField.resignFirstResponder()
			comeIn()
		default:
			return false
		}
		return true
	}
}

