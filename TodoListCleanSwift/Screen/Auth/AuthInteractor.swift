//
//  AuthInteractor.swift
//  TodoListCleanSwift
//
//  Created by Denis Ivanov on 23.02.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthBusinessLogic {
	func doSomething(request: Auth.Something.Request)
}

protocol AuthDataStore {
	
}

class AuthInteractor: AuthBusinessLogic, AuthDataStore {
	var presenter: AuthPresentationLogic?
	var worker: AuthWorker?
	
	// MARK: Do something
	
	func doSomething(request: Auth.Something.Request) {
		worker = AuthWorker(authManager: AuthManager())
		switch request {
		case .auth(let login, let password):
			worker?.doSomeWork(login: login, password: password, completion: handle(state: ))
		}
	}
	
	private func handle(state: AuthWorker.State) {
		switch state {
		case .success:
			presenter?.presentSomething(response: .success)
		case .failure(let description):
			presenter?.presentSomething(response: .error(description))
		}
	}
}
